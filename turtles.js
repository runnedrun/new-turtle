var _heading = 0
var _position = {x: 0, y: 0};
var _actionInProgress;
var _turtle = $(\"#turtle\");\n\nfunction turnRight() {
                 _heading = _heading + 90  
                 animateRotate(_heading, _turtle);\n}\n\nfunction turnLeft() {\n  _heading = _heading - 90  \n  animateRotate(_heading, _turtle);\n}\n\nfunction goForward(distance) {    \n  var radians = -1 * _heading * (Math.PI/180);\n  var yIncrement = Math.sin(radians) * distance;\n  var xIncrement = Math.cos(radians) * distance;        \n  \n  var origPosition = {x: _position.x, y: _position.y}; \n  var origHeading = _heading;\n  \n  _position.x = _position.x + xIncrement;\n  _position.y = _position.y + yIncrement;\n  \n  _turtle.animate({\n    left: _position.x, \n    bottom: _position.y,\n  },{\n    complete : function() {\n      insertLine(origPosition, origHeading, distance)\n    }\n  })\n  \n}\n\nfunction insertLine(origin, angle, magnitude) {\n  var line = $(\"<div class='line'></div>\");\n  console.log(\"rotate\", \"rotate(\" + angle + \"deg)\") \n  line.css({\n    left: origin.x + _turtle.width() / 2,    \n    bottom: origin.y + _turtle.height() / 2,\n    width: magnitude,\n    transform: \"rotate(\" + angle + \"deg)\",\n    \"transform-origin\": \"top left\"\n  })\n  \n  $(\"#turtle-cage\").append(line);\n  console.log($(\"#turtle-cage\"))\n}\n\nfunction animateRotate(angle, element) {    \n  // we use a pseudo object for the animation\n  // (starts from `0` to `angle`), you can name it as you want\n  $({deg: 0}).animate({deg: angle}, {\n    duration: 100,\n    step: function(now) {\n      // in the step-callback (that is fired each step of the animation),\n      // you can use the `now` paramter which contains the current\n      // animation-position (`0` up to `angle`)\n      element.css({\n        transform: 'rotate(' + now + 'deg)'\n      });\n    }\n  });\n}\n\n"